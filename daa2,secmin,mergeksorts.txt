logic one for second minimum:

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
int n,c=0,min1=0,min2=0,x;
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++)
    scanf("%d",&a[i]);
    int i=0;
    while(c<n)
    {
        x=a[i];
        if(c==0)
            min1=x;
        if(c==1){
        min2=x;
        }
        if(x<min1)
        {
            min2=min1;
            min1=x;
        }
        if(x>min1 && x<min2)
            min2=x;
        c++;
        i++;
    }
 printf("%d\n",min1);
    if(n==1)
    printf("*\n");
    else if(min1==min2){
      printf("*\n");
    }
    else{
    printf("%d",min2);   
    }
    return 0;
}








logic2 for second minimum:
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int main() {
    int n,temp;
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++)
    scanf("%d",&a[i]);
    for(int i=0;i<n-1;i++)
    {
        for(int j=i;j<n;j++)
        {
            if(a[i]>a[j])
            {
                temp=a[i];
                a[i]=a[j];
                a[j]=temp; 
            }
        } 
    }
   printf("%d\n",a[0]);
    if(n==1)
        printf("*\n");
    else if(a[0]==a[1])
        printf("*\n");
    else
        printf("%d\n",a[1]);
    
    return 0;
}





logic1 for merging k sorted arrays:
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    int a,n,x,temp;
    scanf("%d",&a);
    vector<int> v;
    for(int i=0;i<a;i++)
    {
        scanf("%d",&n);
        for(int j=0;j<n;j++)
        {
            scanf("%d",&x);
            v.push_back(x);
        }
    
    }
   sort(v.begin(),v.end());
   
    for(int i=0;i<v.size();i++)
        printf("%d\n",v[i]);
    return 0;
}









logic2 for merging k sorted arrays:
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

int total(vector<int> v1)
{
    int total=0;
    
    for(int i=0;i<v1.size();i++)
    {
        total=total+v1[i];
    }
    
    return (total);
}

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ 
    int k,sz,x,min,a;
    cin>>k;
    
    int dup[k]={0};
    
    vector<int> size;
    vector<int> v[k];
    
    for(int i=0;i<k;i++)
    {
        cin>>sz;
        size.push_back(sz);
        
        for(int j=0;j<size[i];j++)
        {
            cin>>x;
            v[i].push_back(x);
        }
    }
    
    int sum=total(size);
    
    vector<int> ans;
    
    for(int i=0;i<sum;i++)
    {
        min=1000;
        
        for(int j=0;j<k;j++)
        {
            if(dup[j]<size[j])
            {
                if(min>v[j][dup[j]])
                {
                    min=v[j][dup[j]];
                    a=j;
                }
            }
        }
        dup[a]=dup[a]+1;
        ans.push_back(min);
    }
    
    for(int i=0;i<ans.size();i++)
    {
        cout<<ans[i]<<endl;
    }
    
    return 0;
}








logic for a[i]=i:

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
int n,k=0;
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
        if(a[i]>=0)
        {
            if(a[i]==i)
            {
                printf("%d\n",a[i]);
                k++;
            }
        }
        
        
    }
if(k==0){
   printf("*\n");
}
    return 0;
}

