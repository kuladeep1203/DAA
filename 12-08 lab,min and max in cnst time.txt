min and max in 3n/2-2:


#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int main() {
int n,x=0,y=0;
scanf("%d",&n);
    if(n%2==0)
    {
    int a[n];
    for(int i=0;i<n;i++)
    scanf("%d",&a[i]);
    int min[n],max[n];
    int lmin=0,lmax=0,i;
     for(i=0;i<n;i=i+2)
     {
        if(a[i]>a[i+1]){
        max[x]=a[i];
         min[y]=a[i+1];
             x++;
             y++;
             }
         else
         {
           max[x]=a[i+1];
         min[y]=a[i];
             x++;
             y++;  
         }
     }
        lmin=min[0];
        lmax=max[0];
      for(i=0;i<y;i++)
      {
          if(lmin>min[i])
              lmin=min[i];
      }
       for(i=0;i<x;i++)
      {
          if(lmax<max[i])
              lmax=max[i];
      } 
    printf("%d\n",lmin);
    printf("%d\n",lmax);
    }
    else
    {
      int a[n+1];
    for(int i=0;i<n;i++)
    scanf("%d",&a[i]);
    a[n]=a[n-1];
    int min[n+1],max[n+1];
    int lmin=0,lmax=0,i;
     for(i=0;i<n+1;i=i+2)
     {
         if(a[i]>a[i+1]){
        max[x]=a[i];
         min[y]=a[i+1];
             x++;
             y++;
             }
         else
         {
           max[x]=a[i+1];
         min[y]=a[i];
             x++;
             y++;  
         }
     }
        lmin=min[0];
        lmax=max[0];
      for(i=0;i<y;i++)
      {
          if(min[i]<lmin)
              lmin=min[i];
      }
       for(i=0;i<x;i++)
      {
          if(lmax<max[i])
              lmax=max[i];
      } 
    printf("%d\n",lmin);
    printf("%d\n",lmax);
        
    }
    
    
    return 0;
}




find min and max in constant time logic 1:



#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int main() {
int n;
scanf("%d",&n);
int a[n],b[n],k,j,jail,l,m;
for(int i=0;i<n;i++)
{
scanf("%d",&a[i]);
 b[i]=a[i];
 if(i>0)
  {
 j=i;
 k=(i-1)/2;
  l=i;
  m=(i-1)/2;
 while(a[j]<a[k])
   {
  jail=a[j];
a[j]=a[k];
a[k]=jail; 
j=(j-1)/2;
k=(j-1)/2;
 }
 while(b[l]>b[m])
  {
jail=b[l];
b[l]=b[m];
b[m]=jail;  
 l=(l-1)/2;
 m=(m-1)/2;
}
   }
}
printf("%d\n%d",a[0],b[0]);
    return 0;
}









find min and max in constant time logic 2:



#include <stdio.h>
#include <stdlib.h>
int j=0;
struct node {
  int key;
  struct node *left, *right;
};
struct node *newNode(int item) {
  struct node *temp = (struct node *)malloc(sizeof(struct node));
  temp->key = item;
  temp->left = temp->right = NULL;
  return temp;
}
void inorder(struct node *root,int n,int b[]) {
  if (root != NULL) {
    inorder(root->left,n,b);
    b[j]=root->key;
    j++;
    inorder(root->right,n,b);
  }
}
struct node *insert(struct node *node, int key) {
  if (node == NULL) 
  return newNode(key);
  if (key < node->key)
    node->left = insert(node->left, key);
  else
    node->right = insert(node->right, key);
  return node;
}
int main() {
int n,i;
scanf("%d",&n);
int a[n],b[n];
struct node *root = NULL;
for(i=0;i<n;i++){
scanf("%d",&a[i]);
int k=a[i];
root = insert(root,k);
 }
  inorder(root,n,b);
  printf("%d\n",b[0]);
  printf("%d",b[n-1]);
}



logic for min and 2nd min:
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int size = 0;
void swap(int *a, int *b)
{
  int temp = *b;
  *b = *a;
  *a = temp;
}
void heapify(int array[], int size, int i)
{
    int smallest = i;
    int l = 2 * i + 1;
    int r = 2 * i + 2;
    if (l < size && array[l] < array[smallest])
      smallest = l;
    if (r < size && array[r] < array[smallest])
      smallest = r;
    if (smallest != i)
    {
      swap(&array[i], &array[smallest]);
      heapify(array, size, smallest);
    }
  
}
void insert(int array[], int newNum)
{
  if (size == 0)
  {
    array[0] = newNum;
    size += 1;
  }
  else
  {
    array[size] = newNum;
    size += 1;
    for (int i = size / 2 - 1; i >= 0; i--)
    {
      heapify(array, size, i);
    }
  }
}

int main() {
int n,z;
    scanf("%d",&n);
    int a[n],array[n];
    for(int i=0;i<n;i++)
    scanf("%d",&a[i]);
    int min1=a[0];
    int i;
    for(i=0;i<n;i++)
    {
        if(a[i]<min1){
            min1=a[i];
             z=i;
        }
    }
    printf("%d\n",min1);
    
    if(z==0)
    {
        for(int j=1;j<n;j++){
            int k=a[j];
            insert(array,k);
            }
    }
    else if(z==n)
    {
      for(int j=0;j<n-1;j++){
            int l=a[j];
            insert(array,l);
            }  
    }
    else
    {
        for(int j=z;j<n-1;j++)
            a[j]=a[j+1];
    for(int j=0;j<n-1;j++)
    {
        int m=a[j];
            insert(array,m);
    }
    }
    if(n==1)
    {
        printf("*\n");
    }
    else if(min1==array[0])
    {
         printf("*\n");
    }
    else
        printf("%d",array[0]);
    return 0;
}

